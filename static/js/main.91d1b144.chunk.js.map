{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","searchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filterMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAaeA,MATf,SAAcC,GACV,OACI,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,WAAWC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACnB,oCAAOL,EAAMI,QAAQE,KAArB,OACA,4BAAIN,EAAMI,QAAQG,YCKfC,G,MATC,SAACR,GAEb,OACI,qBAAKC,UAAU,WAAf,SACID,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAC1B,cAAC,EAAD,CAAwBA,QAAUA,GAAtBA,EAAQC,WCIjBM,G,MAXG,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aAC7B,OACI,8BACA,uBAAQZ,UAAU,SAClBa,KAAK,SACLF,YAAaA,EAChBG,SAAUF,QCiCAG,G,wDApCb,aAAc,IAAD,8BACX,gBAaFH,aAAa,SAACI,GACZ,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAbrC,EAAKC,MAAM,CACTb,SAAS,GACTU,YAAY,IAJH,E,qDAQb,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAM,SAAAC,GAAQ,OAAIA,EAASC,UAC3BF,MAAK,SAAAG,GAAK,OAAG,EAAKT,SAAS,CAACT,SAASkB,S,oBAMxC,WAAS,IAAD,EAEwBC,KAAKN,MAA5Bb,EAFD,EAECA,SAAUU,EAFX,EAEWA,YACXU,EAAgBpB,EAASqB,QAAO,SAAA1B,GAAO,OAC3CA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAEpD,OACE,sBAAK9B,UAAU,MAAf,UACA,iDACA,cAAC,EAAD,CAAWW,YAAY,kBACvBC,aAAce,KAAKf,eAEnB,cAAC,EAAD,CAAUJ,SAAUoB,W,GA9BNI,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.91d1b144.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css'\r\n\r\n\r\nfunction Card(props) {\r\n    return (\r\n        <div className='card-container'>\r\n       {<img alt='monsters' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}></img> }\r\n            <h2>  {props.monster.name} </h2>\r\n            <p>{props.monster.email}</p>\r\n        </div> \r\n    );\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from '../card/card.component';\r\nimport './card-list.styles.css'\r\n\r\n\r\nconst CardList= (props)=> {\r\n \r\n    return (\r\n        <div className='cardlist'>\r\n           {props.monsters.map(monster=> (\r\n            <Card key= {monster.id} monster= {monster}/> ))}\r\n        </div>\r\n    ); \r\n}\r\nexport default CardList;\r\n","import React from 'react';\r\nimport './search-box.styles.css'\r\n\r\nconst searchBox = ({placeholder, handleChange}) => {\r\n    return (\r\n        <div>\r\n        <input  className='search'\r\n        type='search' \r\n        placeholder={placeholder}\r\n     onChange={handleChange}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default searchBox;","import React, {Component} from 'react';\nimport CardList from './components/card-list/card-list'\nimport SearchBox from './components/search-box/search-box.component'\nimport './App.css';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state={\n      monsters:[ ],\n      searchField:''\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then (response => response.json())\n    .then(users=> this.setState({monsters:users}))\n  }\n\n  handleChange=(e)=>{\n    this.setState({searchField: e.target.value})\n  }\n  render(){  \n\n    const {monsters, searchField}=this.state;\n    const filterMonsters= monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase()));\n\n  return (\n    <div className=\"App\">\n    <h1>Monster Rolodex</h1>\n    <SearchBox placeholder='Search Monsters' \n    handleChange={this.handleChange}/>\n    \n    <CardList monsters={filterMonsters} />  \n\n        \n    </div>\n  );}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}